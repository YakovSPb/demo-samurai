{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/AddMessageForm.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","Message","props","className","s","message","DialogItem","dialog","to","id","name","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","e","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,0B,oBCA5ID,EAAOC,QAAU,CAAC,OAAS,6B,qFCSZC,EANC,SAACC,GAChB,OACG,qBAAKC,UAAWC,IAAEC,QAAlB,SAA4BH,EAAMG,W,4CCQvBC,EAVI,SAACJ,GACnB,OACI,qBAAKC,UAAWC,IAAEG,OAAlB,SACE,cAAC,IAAD,CAASC,GAAI,YAAcN,EAAMO,GAAjC,SAAsCP,EAAMQ,U,yCCF7CC,EAAcC,YAAiB,IAetBC,cAAU,CAACC,KAAM,2BAAjBD,EAbQ,SAACX,GACpB,OACI,uBAAMa,SAAUb,EAAMc,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBD,KAAK,iBAAiBY,YAAY,yBAE7C,8BAAK,kDCuBFC,EA7BC,SAACrB,GAEhB,IAAIsB,EAAQtB,EAAMuB,YAEbC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAiBD,GAAIoB,EAAEpB,IAAZoB,EAAEpB,OAC1EqB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAK,cAAC,EAAD,CAAS3B,QAAS2B,EAAE3B,SAAc2B,EAAEvB,OAC/De,EAAMS,eAM3B,OAAI/B,EAAMgC,OAGT,sBAAK/B,UAAWC,IAAEuB,QAAlB,UACC,qBAAKxB,UAAWC,IAAE+B,aAAlB,SACET,IAEF,qBAAKvB,UAAWC,IAAE2B,SAAlB,SACC,8BAAMD,MAEP,cAAC,EAAD,CAAgBf,SAdE,SAACqB,GACrBlC,EAAMmC,YAAYD,EAAOH,sBAGA,cAAC,IAAD,CAAUzB,GAAI,Y,+DCjBpC8B,EAA6B,SAACd,GAAD,MAAY,CAC7CU,OAAQV,EAAMe,KAAKL,SCoBLM,sBACdC,aAjBqB,SAACjB,GACtB,MAAO,CACNC,YAAaD,EAAMC,gBAII,SAACiB,GACzB,MAAO,CACNL,YAAa,SAACJ,GACZS,EAASC,YAAmBV,UDVA,SAACW,GAAe,IAEzCC,EAFwC,uKAI5C,OAAKC,KAAK5C,MAAMgC,OACT,cAACU,EAAD,eAAeE,KAAK5C,QADI,cAAC,IAAD,CAAUM,GAAG,eAJA,GAEduC,IAAMH,WAStC,OAFoCH,YAAQH,EAARG,CAAoCI,KCQ1DL,CAGZjB","file":"static/js/4.f4b3fa2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3SbHm\",\"dialogsItems\":\"Dialogs_dialogsItems__Uk9fd\",\"active\":\"Dialogs_active__3wbiP\",\"dialog\":\"Dialogs_dialog__D_ci2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__l7iJ5\"};","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\treturn (\r\n\t\t\t\t<div className={s.message}>{props.message}</div>\r\n\t\t)\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\treturn (\r\n\t\t\t\t\t<div className={s.dialog}>\r\n\t\t\t\t\t\t\t<NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validator/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialog-add-message-form\"})(AddMessageForm)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageFrom from './AddMessageForm';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tlet state = props.dialogsPage;\r\n\r\n \tlet dialogsElements = state.dialogs.map(e => <DialogItem name={e.name} key={e.id} id={e.id} />);\r\n \tlet messagesElements = state.messages.map(m => \t<Message message={m.message} key={m.id} />)\r\n \tlet newMessageBody = state.newMessageBody;\r\n\r\n \tlet addNewMessage = (values) => {\r\n\t\tprops.sendMessage(values.newMessageBody);\r\n \t}\r\n\r\n \tif(!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n\treturn (\r\n\t\t\t<div className={s.dialogs}>\r\n\t\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t\t{dialogsElements}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.messages}>\r\n\t\t\t\t\t<div>{messagesElements}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<AddMessageFrom onSubmit={addNewMessage} />\r\n\t\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\tlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n\t\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\r\nlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\treturn ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport Message from './Message/Message'\r\nimport Dialogs from './Dialogs'\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from 'react-redux'\r\nimport {compose} from 'redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect.js'\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMessage: (newMessageBody) => {\r\n\t\t\t\tdispatch(sendMessageCreator(newMessageBody));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n\t)(Dialogs);\r\n;"],"sourceRoot":""}