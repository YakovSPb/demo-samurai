{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","Post","props","className","s","item","src","message","count","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElement","posts","reverse","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","fullName","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,IAAM,2B,oBCAjFD,EAAOC,QAAU,CAAC,iBAAmB,oC,oBCArCD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,uKCeVC,EAbF,SAACC,GACb,OACG,sBAAKC,UAAWC,IAAEC,KAAlB,UACA,qBAAKC,IAAI,6EACRJ,EAAMK,QACP,gCACE,wCAAkBL,EAAMM,a,iCCFxBC,EAAcC,YAAiB,IAE/BC,EAAUC,IAAMC,MAAK,SAAAX,GAE1B,IAAIY,EAAe,YAAIZ,EAAMa,OAC3BC,UACAC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMX,QAASW,EAAEX,QAASC,MAAOU,EAAEV,WAS9C,OACC,sBAAKL,UAAWC,IAAEe,WAAlB,UACC,yCAEA,sBAAKhB,UAAWC,IAAEW,MAAlB,UACC,cAACK,EAAD,CAAqBC,SAVR,SAACC,GAChBpB,EAAMqB,QAAQD,EAAOE,gBAUlBV,WAqBDM,EAAsBK,YAAU,CAACC,KAAM,yBAAjBD,EAdJ,SAACvB,GACtB,OACC,sBAAMmB,SAAUnB,EAAMyB,aAAtB,SACC,gCACC,cAACC,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWC,IAAUC,YAAa,eACxDC,SAAU,CAACC,IAAUzB,KACzB,8BACC,wDASUE,I,QC1BAwB,EAHUC,aAhBD,SAACC,GACxB,MAAO,CACNtB,MAAOsB,EAAMC,YAAYvB,MACzBS,YAAaa,EAAMC,YAAYd,gBAIN,SAACe,GAC3B,MAAO,CACNhB,QAAS,SAACC,GACTe,EAASC,YAAqBhB,QAMRY,CAA6CzB,G,mCCwBvD8B,EA1CgB,SAACvC,GAAW,IAAD,EAERwC,oBAAS,GAFD,mBAEjCC,EAFiC,KAEvBC,EAFuB,OAGZF,mBAASxC,EAAM2C,QAHH,mBAGjCA,EAHiC,KAGzBC,EAHyB,KAKtCC,qBAAU,WACND,EAAU5C,EAAM2C,UACjB,CAAC3C,EAAM2C,SAeV,OACI,iCACMF,GACF,8BACI,sBAAMK,cAjBO,WACrBJ,GAAY,IAgBJ,SAAwC1C,EAAM2C,QAAU,aAG3DF,GACD,8BACI,uBACIM,SAdO,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAaYC,WAAW,EACrCC,OApBW,WACvBV,GAAY,GACZ1C,EAAMqD,aAAaV,IAmBPO,MAAOP,UCfXW,EAlBI,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASZ,EAA0B,EAA1BA,OAAQU,EAAkB,EAAlBA,aACrC,OAAKE,EAIH,8BAEA,sBAAKtD,UAAWC,IAAEsD,iBAAlB,UACE,qBAAKpD,IAAKmD,EAAQE,OAAOC,QACzB,cAAC,EAAD,CAAwBf,OAAQA,EAAQU,aAAcA,IACxD,8BAAME,EAAQI,gBARP,cAACC,EAAA,EAAD,KCQKC,EATA,SAAC7D,GAChB,OACG,gCACE,cAAC,EAAD,CAAauD,QAASvD,EAAMuD,QAASZ,OAAQ3C,EAAM2C,OAAQU,aAAcrD,EAAMqD,eAC/E,cAAC,EAAD,Q,eCHAS,E,kLAGE,IAAIC,EAASC,KAAKhE,MAAMiE,MAAMC,OAAOH,OAChCA,IACDA,EAASC,KAAKhE,MAAMmE,mBAEhBH,KAAKhE,MAAMoE,QAAQC,KAAK,UAGhCL,KAAKhE,MAAMsE,eAAeP,GAC1BC,KAAKhE,MAAMuE,UAAUR,K,+BAKrB,OACI,cAAC,EAAD,2BAAaC,KAAKhE,OAAlB,IACSuD,QAASS,KAAKhE,MAAMuD,QACpBZ,OAAQqB,KAAKhE,MAAM2C,OACnBU,aAAcW,KAAKhE,MAAMqD,oB,GApBf3C,IAAM8D,WAkCtBC,sBACXvC,aAVkB,SAACC,GACnB,MAAQ,CACJoB,QAASpB,EAAMC,YAAYmB,QAC3BZ,OAAQR,EAAMC,YAAYO,OAC1BwB,iBAAkBhC,EAAMuC,KAAKX,OAC7BY,OAAQxC,EAAMuC,KAAKC,UAKE,CAACL,mBAAgBC,cAAWlB,mBACrDuB,IAFWH,CAGbX","file":"static/js/3.e6d4dafd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1ABur\",\"img\":\"ProfileInfo_img__3n58Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"Profile_descriptionBlock__2xT7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__27p1H\",\"posts\":\"MyPosts_posts__rW-sR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__SpVVC\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n    <div className={s.item}>\r\n    <img src=\"https://im0-tub-ru.yandex.net/i?id=77a3063ca4ff31316647633049e91b15&n=13\" />\r\n    {props.message}\r\n    <div>\r\n      <span>Like</span>{props.count}\r\n    </div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validator/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n\tlet postsElement = [...props.posts]\r\n\t\t.reverse()\r\n\t\t.map(p => <Post message={p.message} count={p.count}/>)\r\n\r\n\tlet newPostElement = React.createRef();\r\n\r\n\tlet onAddPost = (values) => {\r\n\t\tprops.addPost(values.newPostText);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={s.postsBlock}>\r\n\t\t\t<h3>My post</h3>\r\n\r\n\t\t\t<div className={s.posts}>\r\n\t\t\t\t<AddNewPostFormRedux onSubmit={onAddPost}/>\r\n\t\t\t\t{postsElement}\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n});\r\n\r\nlet AddNewPostForm  = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n\t\t\t\t\t   validate={[required, maxLength10]}/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button>Add post</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts,\r\n\t\tnewPostText: state.profilePage.newPostText\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostText) => {\r\n\t\t\tdispatch(addPostActionCreator(newPostText));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n\r\nexport default MyPostsContainer;","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={onStatusChange} autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\treturn (\r\n    <div>\r\n\r\n    <div className={s.descriptionBlock}>\r\n      <img src={profile.photos.large}/>\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n    <div>{profile.fullName}</div>\r\n\r\n    </div>\r\n\r\n    </div>\r\n\t\t)\r\n}\r\n\r\nexport default  ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n\t\t)\r\n}\r\n\r\nexport default  Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus} from '../../redux/profile-reducer'\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}